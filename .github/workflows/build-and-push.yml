name: Build, Push and Deploy to Azure Container Apps

on:
  # Run on pushes to the main branch
  push:
    branches:
      - 'main'
  # Also run on pull requests targeting the main branch to validate the build
  pull_request:
    branches:
      - 'main'

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    # Grant permissions for the login action to authenticate
    permissions:
      contents: read
      packages: write # or your specific registry permissions

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container Registry
        uses: docker/login-action@v3
        with:
          # Use the URL of your container registry
          registry: ${{ vars.CONTAINER_REGISTRY_URL }}
          # Use secrets for credentials
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          # Link the metadata to the image in your repository
          images: ${{ vars.CONTAINER_REGISTRY_URL }}/${{ vars.CONTAINER_REGISTRY_REPOSITORY_NAME }}
          # Generates tags:
          # - type=sha,prefix=,suffix=,format=short -> short git sha (e.g., 1a2b3c4)
          # - type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }} -> 'latest' tag only for main branch
          tags: |
            type=sha,prefix=,format=short
            type=raw,value=latest,enable=${{ github.ref_name == 'main' }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          # Only push the image on pushes to the main branch, not on pull requests
          push: ${{ github.event_name == 'push' }}
          # Use the tags and labels generated by the metadata-action
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Optional: Echo the image details for verification
      - name: Echo image details
        run: |
          echo "Image pushed: ${{ steps.build-and-push.outputs.imageid }}"
          echo "Tags: ${{ steps.meta.outputs.tags }}"

      # Deploy to Azure Container Apps (only on pushes to main)
      - name: Log in to Azure
        if: github.event_name == 'push' && github.ref_name == 'main'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}


      - name: Deploy to Azure Container Apps
        if: github.event_name == 'push' && github.ref_name == 'main'
        uses: azure/container-apps-deploy-action@v1
        with:
          # Azure Container App details
          containerAppName: ${{ vars.AZURE_CONTAINER_APP_NAME }}
          resourceGroup: ${{ vars.AZURE_RESOURCE_GROUP }}
          # Use the latest tag for the image that was just built and pushed
          imageToDeploy: ${{ vars.CONTAINER_REGISTRY_URL }}/${{ vars.CONTAINER_REGISTRY_REPOSITORY_NAME }}:latest
          # Optional: Azure Container Registry credentials (if using ACR and not already logged in)
          acrName: ${{ vars.AZURE_CONTAINER_REGISTRY_NAME }}
          acrUsername: ${{ secrets.DOCKER_USERNAME }}
          acrPassword: ${{ secrets.DOCKER_PASSWORD }}

      - name: Echo deployment details
        if: github.event_name == 'push' && github.ref_name == 'main'
        run: |
          echo "Deployed to Azure Container App: ${{ vars.AZURE_CONTAINER_APP_NAME }}"
          echo "Resource Group: ${{ vars.AZURE_RESOURCE_GROUP }}"
          echo "Image: ${{ vars.CONTAINER_REGISTRY_URL }}/${{ vars.CONTAINER_REGISTRY_REPOSITORY_NAME }}:latest"
